AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  mcp-server-lambda-example

  Sample SAM Template for mcp-server-lambda-example

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  WeatherServerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./weather-server
      DockerTag: nodejs22.x
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        McpServerApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/{proxy+}
            Method: ANY
  StdIoWeatherServerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      Dockerfile: stdio.Dockerfile
      DockerContext: ./weather-server
      DockerTag: nodejs22.x
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      FunctionUrlConfig:
        AuthType: NONE
        InvokeMode: BUFFERED # Use RESPONSE_STREAM for streaming if needed
        Cors:
          AllowCredentials: false
          AllowHeaders:
            - Content-Type
            - Authorization
            - X-Requested-With
            - Accept
          AllowMethods:
            - GET
            - POST
            - DELETE
          AllowOrigins:
            - "*"
          ExposeHeaders:
            - "*"
          MaxAge: 86400
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
Outputs:
  WeatherServerFunction:
    Description: Weather Server Lambda Function ARN
    Value: !GetAtt WeatherServerFunction.Arn
  StdIoWeatherServerFunction:
    Description: Weather Server Lambda Function ARN
    Value: !GetAtt StdIoWeatherServerFunction.Arn
